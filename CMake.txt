# Authors: Giulia Ramos Bagodi, Mateus P. Oliveira, Octavio Patrocinio, Yuri Stockler 2023/06/24

# https://cmake.org/examples
# cmake -S . -B build
# cmake --build build
# cmake --build build --target test
# or
# mkdir build && cd build
# cmake .. && make VERBOSE=1
# make test && doas make install/strip

cmake_minimum_required(VERSION 3.14...3.18)

project(TheLegendOfZip
  VERSION
    2.0
  DESCRIPTION
    Nosso projeto constitui de um jogo de RPG 2D,
    o qual você acompanha os primórdios do surgimento do Zip,
    um gatinho aprendiz de magia (e nosso herói) que mora em um mundo de computador
    onde feitiços são dados por códigos, bugs são uma ameaça perigosa
    que tomaram conta do reino e nosso gatinho aprendiz tem que salvar o mundo.

    Compila:
    gcc -Wall  src/zip.c lib/lista.c lib/draw.c lib/save.c  -o zip -lraylib
    Executa:
    ./zip

  LANGUAGES
    C CXX
)


# Minimal STATIC lib
# add_library(lib) 
# add_executable(Main src/zip.c)
# target_link_libraries(zip)
# Dependences
# find_library(m_library NAMES m PATHS /usr/local/lib)
# target_link_libraries(cac ${m_library})
# find_path(m_include NAMES math.h PATHS /usr/local/include)
# include_directories(${m_include})

//  Compila:
    gcc -Wall  src/zip.c lib/lista.c lib/draw.c lib/save.c  -o zip -lraylib

    Executa:
    ./zip

set(CMAKE_BUILD_TYPE Release)
if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
  message(STATUS "Setting build type to '${DEFAULT_BUILD_TYPE}' as none was specified.")
  set(CMAKE_BUILD_TYPE "${DEFAULT_BUILD_TYPE}" CACHE STRING "Choose the type of build." FORCE)
  # Set the possible values of build type for cmake-gui
  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS "Debug" "Release" "MinSizeRel" "RelWithDebInfo")
endif()

include(GNUInstallDirs)

set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -glldb -fno-omit-frame-pointer -DDBG")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -W -Wall -Wunused -O2 -std=c11 -static")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

set(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/bin)
set(LIBRARY_OUTPUT_PATH  ${CMAKE_BINARY_DIR}/lib)

message(${CMAKE_BINARY_DIR})

# ls -1 src/*.c
set(SOURCES src/zip.c)

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)

add_executable(calc ${SOURCES})
target_link_libraries(zip ...)

# ls -1 lib/*.c
add_library(Zip STATIC lib/draw.c & lista.c & save.c)
# add_library(Zip SHARED lib/draw.c & lista.c & save.c)

set_target_properties(zip PROPERTIES
    OUTPUT_NAME zip
    VERSION ${PROJECT_VERSION}
    SOVERSION 1
    PUBLIC_HEADER include/zip.h)

target_include_directories(Zip PUBLIC
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
    $<INSTALL_INTERFACE:include>
    PRIVATE src)

configure_file(LegendOfZip.pc.in LegendOfZip.pc @ONLY)

install(TARGETS Zip EXPORT LegendOfZipConfig
    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
    PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})

install(FILES ${CMAKE_BINARY_DIR}/LegendOfZip.pc
    DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/pkgconfig)

install(DIRECTORY include/
    DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${TheLegendOfZip})

# install(EXPORT MyCalcLibConfig DESTINATION share/zip/cmake)
# export(TARGETS ${PROJECT_NAME} FILE LegendOfZipConfig.cmake)

